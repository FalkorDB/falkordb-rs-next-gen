name: Rust PR

on:
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check-files:
    runs-on: ubuntu-latest
    outputs:
      file_changed: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if specific file changed
        id: check
        run: |
          if [ git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q "build/Dockerfilet"; ] then
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_ENV
          fi
  docker:
    needs: check-files
    if: needs.check-files.outputs.file_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: aviavni/falkordb-build:${{ github.event.pull_request.number }}
          context: ./build
  test:
    runs-on: ubuntu-latest
    container: aviavni/falkordb-build:${{ contains(github.event.pull_request.changed_files, 'build/Dockerfile') && github.event.pull_request.number || 'latest' }}
    needs: docker
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Format
        run: |
          rustup default stable
          cargo fmt --all --check
      - name: Lint
        run: |
          cargo clippy --all
      - name: Build
        run: |
          cargo build
      - name: Run tests
        run: |
          . /data/venv/bin/activate
          pytest tests/test_e2e.py
  coverage:
    runs-on: ubuntu-latest
    container: aviavni/falkordb-build:${{ contains(github.event.pull_request.changed_files, 'build/Dockerfile') && github.event.pull_request.number || 'latest' }}
    needs: docker
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Run code coverage
        run: |
          rustup default stable
          RUSTFLAGS="-C instrument-coverage" cargo build
          mkdir cov
          cd cov
          . /data/venv/bin/activate
          TARGET=../target/debug/libfalkordb.so pytest ../tests/test_e2e.py
          llvm-profdata-20 merge --sparse `ls *.profraw` -o cov.profdata
          llvm-cov-20 export --format=lcov --instr-profile cov.profdata ../target/debug/libfalkordb.so > codecov.txt.all
          lcov --ignore-errors unused -r codecov.txt.all -o codecov.txt
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  delete-tag:
    runs-on: ubuntu-latest
    needs: docker
    if: always()
    steps:
      - name: Login to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          curl -X DELETE \
            -u "$DOCKERHUB_USERNAME:$DOCKERHUB_TOKEN" \
            "https://hub.docker.com/v2/repositories/aviavni/falkordb-build/tags/${{ github.event.pull_request.number }}"
